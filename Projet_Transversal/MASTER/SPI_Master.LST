C51 COMPILER V9.52.0.0   SPI_MASTER                                                        05/18/2017 17:38:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPI_MASTER
OBJECT MODULE PLACED IN SPI_Master.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SPI_Master.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          ///////////////////////////////
   2          //SPI_Master.c
   3          ///////////////////////////////
   4          //AUTH: 
   5          //DATE: 29/04/2017
   6          //
   7          //Target: C8051F02x
   8          //Tool chain: KEIL Eval 'c'
   9          //
  10          //Sous-ensemble FO-MS1
  11           #include <c8051f020.h>
  12          #include "Declarations_GPIO_BSE.h"
  13          #include <intrins.h>
  14          #include <string.h>
  15          #include "SPI_Master.h"
  16          #include "Putchar_Getchar.h"
  17          /*
  18          unsigned char* serialize_struct(struct COMMANDES_POINTEUR c)
  19          {
  20            unsigned char *data;
  21              data = (unsigned char*) malloc(sizeof(c));
  22              memcpy(data, &c1, sizeof(c));
  23            
  24            return data;
  25          }
  26          */
  27          unsigned char putchar_spi(unsigned char c)
  28          {
  29   1        int i = 0;
  30   1        while (!SPIF);    // on attend la fin du dernier transfert
  31   1        SPIF = 0; // on remet le flag à 0  
  32   1        
  33   1        P3__5 = 0; // NSS     
  34   1        _nop_();
  35   1        _nop_();  // 2 sysclk avant le début du transfert
  36   1      
  37   1        SPI0DAT = c;  // on met les donnees
  38   1        while (TXBSY);  // attend la fin du transfert 
  39   1        
  40   1        if (WCOL)
  41   1          c = 0;  //collision, renverra 0
  42   1        
  43   1        P3__5 = 1; // fin du transfert, NSS repasse en HIGH
  44   1        for(i=0;i<2000;i++);  // tempo à affiner
  45   1        return c;
  46   1      }
  47          
  48          void envoi_trame(unsigned char *trame,int taille)
  49          {
  50   1        int i=0;
  51   1      
  52   1        //envoi caractère début
  53   1        putchar_spi(carac_debut);
  54   1        putchar_spi(carac_debut);
  55   1        
C51 COMPILER V9.52.0.0   SPI_MASTER                                                        05/18/2017 17:38:58 PAGE 2   

  56   1        while (i < taille)
  57   1        {
  58   2          while (!putchar_spi(*trame));
  59   2          i++;    
  60   2          trame++;
  61   2        }
  62   1          
  63   1          // caractères fin
  64   1        putchar_spi(carac_fin);
  65   1        putchar_spi(carac_fin);
  66   1        
  67   1        
  68   1      }
  69          /*
  70          void envoie_struct(struct COMMANDES_POINTEUR c)
  71          {
  72            unsigned char *data = serialize_struct(c);
  73            
  74            envoie_trame(data);
  75            
  76            free(data);
  77          }
  78          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    132    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
