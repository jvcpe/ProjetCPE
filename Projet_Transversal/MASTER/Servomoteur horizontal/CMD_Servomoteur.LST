C51 COMPILER V9.52.0.0   CMD_SERVOMOTEUR                                                   03/28/2017 17:34:08 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE CMD_SERVOMOTEUR
OBJECT MODULE PLACED IN CMD_Servomoteur.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CMD_Servomoteur.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          
   3          //-------------------------------------------------------------------------------------
   4          // CFG_Timer0.c
   5          // Configuration et routine d'interruption du PCA0
   6          //-------------------------------------------------------------------------------------
   7          // AUTH: Mior Edouard
   8          // DATE: 02/03/2017
   9          //
  10          // Target: C8051F02x
  11          // Tool chain: KEIL eval 'c'
  12          //
  13          // Objectifs : - Configuration du PCA 0
  14          //             - Routine d'interruption du PCA 0
  15          //             - Envoi d'une impulsion de largeur variable sur une sortie
  16          // 
  17          // Broches utilisées : P1.0, P1.1
  18          //
  19          //
  20          // Documents utiles : Extraits de la Datasheet du C8051F020
  21          
  22          //--------------------------------------------------------------------------------------------------------
             ----
  23          // Includes
  24          //--------------------------------------------------------------------------------------------------------
             ----
  25          #include "c8051F020.h"
  26          #include "Declarations_GPIO_BSE.h"
  27          #include "CMD_Servomoteur.h"
  28          #include <stdio.h>
  29          #include <math.h>
  30          
  31          
  32          //--------------------------------------------------------------------------------------------------------
             ----
  33          // Variables globales
  34          //--------------------------------------------------------------------------------------------------------
             ----
  35           // Angle du servomoteur avant deplacement
  36          char Angle_actuel_H=90;
  37          
  38          void Config_PCA0(void)
  39          {
  40   1          long int Temps_angle;
  41   1          // Choix de l'horloge - SYSCLK pour un cycle de 11,852 ms
  42   1          PCA0MD |= 0x02;  
  43   1          PCA0MD &= ~0x0C;
  44   1          
  45   1        
  46   1          // Mode PWM 16-bit
  47   1          //PCA0CPM0=0xC2;
  48   1          PCA0CPM1=0xC2;
  49   1        
  50   1        
  51   1          // Rapport cyclique
C51 COMPILER V9.52.0.0   CMD_SERVOMOTEUR                                                   03/28/2017 17:34:08 PAGE 2   

  52   1          Temps_angle=1500;
  53   1          //PCA0CPH0 = ((100-(Temps_angle*100))/11851)*65536/100>>8; // Sortie sur port 1.0
  54   1          PCA0CPH1 = ((100-(Temps_angle*100))/11851)*65536/100>>8; // Sortie sur port 1.1
  55   1      
  56   1          // Lance le comptage du PCA0
  57   1          PCA0CN |= 0x40;
  58   1      }
  59          
  60          
  61          unsigned char CMD_Servo_H (char Angle) //pour l’axe horizontal 
  62          {
  63   1        long int Temps_angle, Temps_Estime;
  64   1        
  65   1        Temps_angle=600+(Angle+90)*10; // Temps en µs - Temps min : 600 µs - Temps max : 2400 µs
  66   1        
  67   1        // Calcul de la valeur de rechargement pour le PWM
  68   1        // Duty_cycle=Temps_angle/11851 avec 11851 le temps en ms d'une période
  69   1        // On multiplie par 100 pour le domaine du rapport cyclique
  70   1        // On multiplie par 65536 pour passer dans la base 16-bits
  71   1        // On divise par 100 pour avoir une valeur fidèle
  72   1        PCA0CPH1 = ((100-(Temps_angle*100))/11851)*65536/100>>8;
  73   1      //  PCA0CPH1 = -(65536/11851)*temps_angle*1000>>8;
  74   1        
  75   1        // Calcul du temps estimé pour faire la rotation
  76   1        Temps_Estime=abs(Angle_actuel_H-Angle)*21/60; // cf datasheet 
  77   1        
  78   1        // Redéfinition de l'angle actuel
  79   1        Angle_actuel_H=Angle;
  80   1        
  81   1        return Temps_Estime;
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    239    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
