C51 COMPILER V9.52.0.0   LIB_BSE_UART                                                      03/28/2017 17:34:09 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LIB_BSE_UART
OBJECT MODULE PLACED IN LIB_BSE_UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LIB_BSE_UART.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <c8051F020.h>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          #include "LIB_BSE_UART.h"
   5          #include "CFG_GLOBALE.h"
   6          void Config_Clock_UART0()
   7          {
   8   1        //Timer1 disabled
   9   1        TR1 = 0;
  10   1        //Timer1 uses Sysclk 
  11   1        CKCON |= 0x10;
  12   1        //Timer1 enabled when TR1=1
  13   1        //Timer1 incremented clock defined by T1M
  14   1        //Timer1 mode 2 : 8-bit counter with auto-reload
  15   1        TMOD |= 0x20;
  16   1        TMOD &= ~(0xD0);
  17   1        //Clear Timer1 overflow flag
  18   1        TF1 = 0;
  19   1        TH1 = -(SYSCLK/BAUDRATE/16);//sysclk/baudrate/16
  20   1        //Enable Timer1 interrupt
  21   1        ET1 = 0;
  22   1        //Timer1 enabled
  23   1        TR1 = 1;
  24   1      }
  25          
  26          void Config_UART0()
  27          {
  28   1        //Mode 1 : 8 bit UART, variable baud rate
  29   1        //RI0 will only be activated if stop bit = 1
  30   1        //UART0 reception enabled
  31   1        SCON0 |= 0x70;
  32   1        SCON0 &= ~(0x83);
  33   1        //Timer 1 overflows used for receive clock
  34   1        RCLK0 = 0;
  35   1        //Timer 1 overflows used for transmit clock
  36   1        TCLK0 = 0;
  37   1        //UART0 baud rate /2 disabled
  38   1        PCON |= 0x80;
  39   1        //Reads/writes of SM20-SM00 access the SM20-SM00 UART0 mode setting
  40   1        PCON &= ~(0x40);
  41   1        //Clear transmit interrupt flag
  42   1        TI0 = 0;
  43   1      }
  44          
  45          char Putchar(char c, char csg_tempo)
  46          {
  47   1        while (!TI0)
  48   1        {
  49   2          int i;
  50   2          for(i=0;i<2200;i++)_nop_();//2200->100µs
  51   2          _nop_();
  52   2          _nop_();
  53   2          csg_tempo--;
  54   2          if(csg_tempo == 0) 
  55   2          {
C51 COMPILER V9.52.0.0   LIB_BSE_UART                                                      03/28/2017 17:34:09 PAGE 2   

  56   3            return 0;
  57   3          }
  58   2        }
  59   1        
  60   1        SBUF0 = c;
  61   1        TI0=0;
  62   1        return c;
  63   1      }
  64          
  65          char Send_String(char* ptr)
  66          {
  67   1        char c;
  68   1        int compteur=0;
  69   1        while(*ptr != 0x00)
  70   1        {
  71   2          c = Putchar(*ptr,100);
  72   2          if (c != 0)
  73   2          {
  74   3            ptr++;
  75   3            compteur++;
  76   3            //TI0=1;
  77   3          }
  78   2          else
  79   2          {
  80   3            return 0;
  81   3          }
  82   2        }
  83   1        return compteur;
  84   1          
  85   1      }
  86          
  87          char Getchar()
  88          {
  89   1        char c;
  90   1        if(RI0 == 0) 
  91   1        {
  92   2          return 0;//if no data received-->return 0
  93   2        }
  94   1        c = SBUF0;
  95   1        RI0 = 0;
  96   1        return c;
  97   1      }
  98          
  99          void Test_main()
 100          {
 101   1        /*char c;
 102   1        char* ptr = &c;
 103   1        TI0 = 1;
 104   1        while (1)
 105   1        {
 106   1          c = Getchar();
 107   1          Send_String(ptr);
 108   1        }*/
 109   1        int i=0;
 110   1        char packet=0 ;
 111   1        char mot[] = "Phrase de test contenant de la ponctuation ,?;.:/" ;
 112   1        Send_String(mot);
 113   1      
 114   1        for(i=0;i<10;i++)
 115   1        {
 116   2        while(packet==0)
 117   2        {
C51 COMPILER V9.52.0.0   LIB_BSE_UART                                                      03/28/2017 17:34:09 PAGE 3   

 118   3        packet = Getchar();   // reçoit le caractère et le stocke
 119   3        if(packet != 0x00)
 120   3          {   // si le packet est non vide
 121   4            Putchar(packet,100);    // alors on l'envoie
 122   4          }
 123   3        }
 124   2          packet=0;
 125   2        }
 126   1      }
 127            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    196    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      55
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
