C51 COMPILER V9.52.0.0   SPI_SLAVE                                                         05/18/2017 17:23:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPI_SLAVE
OBJECT MODULE PLACED IN SPI_Slave.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SPI_Slave.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          ///////////////////////////////
   2          //SPI_Slave.c
   3          ///////////////////////////////
   4          //AUTH: CASTELLO Maxime/MIOR Edouard
   5          //DATE: 11/05/17
   6          //
   7          //Target: C8051F02x
   8          //Tool chain: KEIL Eval 'c'
   9          //
  10          //Sous-ensemble FO-MS1
  11          
  12          #include "c8051F020.h"
  13          #include "SPI_Slave.h"
  14          #include "Declarations_GPIO_BSE.h"
  15          #include "CMD_Servomoteur.h"
  16          #include <intrins.h> 
  17          #include "Putchar_Getchar.h"
  18          #include "Lumiere.h"
  19          #include <stdio.h>
  20          #include <stdlib.h>
  21          #include <string.h>
  22          
  23          // Variables globales
  24          int taille_buffer=50;
  25          char buffer[50];  // stocke les caractères reçus au fur et à mesure
  26          int i_buffer=0; // position dans le buffer
  27          int cas=0;
  28          
  29          int Intensite=0;
  30          int Intensite_defaut=100; 
  31          int Lum_ON=0;
  32          int Lum_ON_defaut=99;
  33          int Lum_OFF=0;
  34          int Lum_OFF_defaut=0;
  35          int Lum_Nbr=0;
  36          int Lum_Nbr_defaut=1;
  37          
  38          void fin_transfert() interrupt 6
  39          { 
  40   1        char c; 
  41   1        // mise à zéro des flags
  42   1        SPIF=0;
  43   1        WCOL=0;
  44   1        MODF=0;
  45   1      
  46   1        RXOVRN=0;
  47   1          // on récupère le caractère dans le buffer de SPI 
  48   1        
  49   1        
  50   1        
  51   1          
  52   1          if(SPI0DAT!=0xFF && SPI0DAT!=0xBB )
  53   1          {
  54   2            c=SPI0DAT;
  55   2            ajout_caractere(c);
C51 COMPILER V9.52.0.0   SPI_SLAVE                                                         05/18/2017 17:23:29 PAGE 2   

  56   2                  
  57   2          }
  58   1        if(SPI0DAT==0xFF)
  59   1          {
  60   2              actionCommande();  
  61   2              initialise_buffer();
  62   2          }
  63   1          
  64   1      }
  65          
  66          void initialise_buffer()
  67          {
  68   1        int i=0;
  69   1        for (i=0;i<taille_buffer;i++)
  70   1        { 
  71   2          buffer[i] =' ';
  72   2        }
  73   1        i_buffer=0;
  74   1      }
  75          
  76          void ajout_caractere(unsigned char c)
  77          { 
  78   1        buffer[i_buffer] = c; // on ajoute le caractère dans le buffer
  79   1        i_buffer++; // on incrémente la position du pointeur
  80   1        
  81   1      }
  82          
  83          
  84          void actionCommande(void)
  85          { 
  86   1        char i=0;
  87   1        int k=0;
  88   1        if(taille_buffer>0)
  89   1          {
  90   2            if(sscanf(buffer, "L I:%d D:%d E:%d N:%d\r",&Intensite, &Lum_ON, &Lum_OFF, &Lum_Nbr)==0);
  91   2            {
  92   3            Lumiere( Intensite_defaut, Lum_ON_defaut, Lum_OFF_defaut,Lum_Nbr_defaut);
  93   3            }         
  94   2            switch(buffer[0])
  95   2            {       
  96   3              case 'C':
  97   3                servomoteur();
  98   3                break;
  99   3              
 100   3              case 'L':
 101   3                switch(buffer[1])
 102   3                { 
 103   4                  case 'S':
 104   4                    Lumiere_Stop();
 105   4                  break;
 106   4                  
 107   4                  case ' ':
 108   4                    switch(buffer[2])
 109   4                    {                       
 110   5                      case 'D':
 111   5                        cas=1;
 112   5                        lum_ON_OFF();
 113   5                      break;
 114   5                      
 115   5                      case 'I':
 116   5                        cas=2;
 117   5                        lum_ON_OFF();
C51 COMPILER V9.52.0.0   SPI_SLAVE                                                         05/18/2017 17:23:29 PAGE 3   

 118   5                      break;
 119   5                      
 120   5                    default:
 121   5                      cas=0;
 122   5                    }
 123   4                    
 124   4                  break;
 125   4                default:
 126   4                  cas=0;
 127   4                }
 128   3              break;
 129   3              default:
 130   3                cas=0;
 131   3              }
 132   2            
 133   2          }   
 134   1      }
 135              
 136          void servomoteur()
 137          {
 138   1        char HV='B';
 139   1        int angle=-90;
 140   1        char chaineCar[10];
 141   1        int i=0, temps_estime;  // pour attendre
 142   1        if(sscanf(buffer, "CS %c A:%d",&HV, &angle)==2)
 143   1        {
 144   2          if(HV=='V')
 145   2            temps_estime=CMD_Servo_V((int)angle);
 146   2        }
 147   1        
 148   1          
 149   1        else
 150   1        {
 151   2          Send_String(0,"Probleme etat_servo");
 152   2          return;
 153   2        }
 154   1          
 155   1        for (i=0; i<(16*temps_estime*10000);i++)
 156   1        {
 157   2          _nop_();
 158   2        }
 159   1        sprintf(chaineCar,"AS %c", HV);
 160   1      
 161   1        return;
 162   1      }
 163          
 164          void lum_ON_OFF()
 165          {
 166   1          Intensite=0;
 167   1           
 168   1          Lum_ON=0;
 169   1          
 170   1          Lum_OFF=0;
 171   1          
 172   1          Lum_Nbr=0;
 173   1          
 174   1         
 175   1        if (cas==1){    
 176   2            if(sscanf(buffer, "L D:%d E:%d N:%d\r",&Lum_ON, &Lum_OFF, &Lum_Nbr)==3)
 177   2            {
 178   3              Lumiere( Intensite_defaut, Lum_ON, Lum_OFF,Lum_Nbr);
 179   3            }
C51 COMPILER V9.52.0.0   SPI_SLAVE                                                         05/18/2017 17:23:29 PAGE 4   

 180   2          }
 181   1      
 182   1        else if (cas==2){
 183   2            
 184   2          if(sscanf(buffer, "L I:%d D:%d E:%d N:%d\r",&Intensite, &Lum_ON, &Lum_OFF, &Lum_Nbr)==4)
 185   2            {
 186   3              Lumiere( Intensite, Lum_ON, Lum_OFF,Lum_Nbr);
 187   3            }
 188   2          }
 189   1          return;
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    857    ----
   CONSTANT SIZE    =     78    ----
   XDATA SIZE       =     72      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
